name: Generate downloads repository

on:
  push:
    branch:
      - main
      - 'openwrt-*'

jobs:
  pages-release:
    name: Main ${{ matrix.arch }}
    runs-on: ubuntu-latest
    env:
      HAVE_TOKEN_KEY_PRIVATE: ${{ secrets.TOKEN_KEY_BUILD_PRIVATE != '' }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    strategy:
      fail-fast: false
      matrix:
        include:
          #- arch: arc_archs
          #  target: archs38-generic
          #  runtime_test: false
          #
          #- arch: arm_cortex-a9_vfpv3-d16
          #  target: mvebu-cortexa9
          #  runtime_test: false

          #- arch: mips_24kc
          #  target: ath79-generic
          #  runtime_test: false

          - arch: mipsel_24kc
            target: mt7621
            container: openwrtorg/sdk

          - arch: ramips-mt7621
            target: mt7621
            container: openwrtorg/sdk
          #
          #- arch: powerpc_464fp
          #  target: apm821xx-nand
          #  runtime_test: false
          #
          #- arch: powerpc_8540
          #  target: mpc85xx-p1010
          #  runtime_test: false
          #
          #- arch: aarch64_cortex-a53
          #  target: mvebu-cortexa53
          #  runtime_test: true
          #
          #- arch: arm_cortex-a15_neon-vfpv4
          #  target: armvirt-32
          #  runtime_test: true
          #
          #- arch: i386_pentium-mmx
          #  target: x86-geode
          #  runtime_test: true
          #
          #- arch: x86_64
          #  target: x86-64
          #  runtime_test: true
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Determine branch name
        run: |
          BRANCH="${GITHUB_BASE_REF#refs/heads/}"
          
          if [ -z "$BRANCH" ]; then
            BRANCH=${GITHUB_REF##*/}            
          fi
          
          if [ -z "$BRANCH" ]; then
            BRANCH=${{ github.ref_name }}
          fi
          
          if [ "$BRANCH" == "main" ] || [ -z "$BRANCH" ]; then
            BRANCH=master            
          fi
          
          echo "Building for $BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
      - name: Determine changed packages
        run: |
          PKG_ROOTS=$(find . -name Makefile | \
            grep -v ".*/src/Makefile" | \
            sed -e 's@./\(.*\)/Makefile@\1/@')

          for ROOT in $PKG_ROOTS; do
            PACKAGES+=$(echo "$ROOT" | sed -e 's@.*/\(.*\)/@\1 @')
            break
          done

          # fallback to test packages if nothing explicitly changes this is
          # should run if other mechanics in packages.git changed
          PACKAGES="${PACKAGES:-vim attendedsysupgrade-common bmon}"

          echo "Building $PACKAGES"
          echo "PACKAGES=$PACKAGES" >> $GITHUB_ENV
          echo "ARCHIVE_NAME=${{ matrix.arch }}-${{ env.BRANCH }}" >> $GITHUB_ENV
          echo "ARCH=${{ matrix.arch }}-${{ env.BRANCH }}" >> $GITHUB_ENV

      - name: GENERATE KEY_BUILD
        if: ${{ env.HAVE_TOKEN_KEY_PRIVATE != 'true' }}
        uses: addnab/docker-run-action@v3
        with:
          image: openwrt/sdk:latest
          options: -v ${{ github.workspace }}:/work -e GH_TOKEN
          run: |
            env
            ./staging_dir/host/bin/usign -G -s /work/key-build -p /work/key-build.pub -c "build key ${{ env.GITHUB_REPOSITORY }}"
            type -p curl >/dev/null || sudo apt install curl -y
            curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg \
            && sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
            && sudo apt update \
            && sudo apt install gh -y
            set -x
            cd /work
            export KEY_BUILD=$(cat ./key-build)"
            export KEY_BUILD_PUBLIC=$(cat ./key-build.pub)"
            gh auth login
            gh secret set TOKEN_KEY_BUILD_PRIVATE --body "$KEY_BUILD"
            gh secret set TOKEN_KEY_BUILD_PUBLIC --body "$PUBLIC"
            git add ./key-build.pub
            git config user.name  github-actions
            git config user.email github-actions@github.com
            git add ./key-build.pub
            git commit -m "bump key build public"
            git push
      - name: Compile packages in the feed
        uses: rafaelcalleja/gh-action-sdk@0.0.1
        env:
          CONTAINER: ${{ matrix.container }}
          ARCH: ${{ env.ARCH }}
          FEEDNAME: packages_ci
          NO_DEFAULT_FEEDS: true
          NO_REFRESH_CHECK: true
          NO_SHFMT_CHECK: true
          KEY_BUILD: ${{ secrets.TOKEN_KEY_BUILD_PRIVATE }}
          PACKAGES: ${{ env.PACKAGES }}
          V: s

      - name: Store targets
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.ARCHIVE_NAME}}-targets
          path: bin/
          if-no-files-found: error

      - uses: actions/download-artifact@v3
        with:
          name: ${{env.ARCHIVE_NAME}}-targets
          path: bin/targets/
      - name: Deploy created packages to gh-pages
        run: |
          git checkout gh-pages 
          mkdir -p "resources/${{ env.BRANCH }}/targets" -p
          find targets/ || true
          find /artifacts/ || true          
          mv bin/targets/* "resources/${{ env.BRANCH }}/targets"
          git config user.name  github-actions
          git config user.email github-actions@github.com
          git add resources
          (git commit -m "bump packages" && git push) || true        
